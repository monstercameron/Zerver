name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: zig-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest

    env:
      # Toolchain & cache
      ZIG_VERSION: 0.15.2
      ZIG_GLOBAL_CACHE_DIR: ${{ github.workspace }}\.zig-cache\global
      ARTIFACT_NAME: zerver-example-windows
      ARTIFACT_PATH: zig-out\bin\zerver_example.exe

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Ensure cache dir exists (avoid cache path error)
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "$env:ZIG_GLOBAL_CACHE_DIR" | Out-Null

      - name: Restore Zig global cache
        uses: actions/cache@v4
        with:
          path: ${{ env.ZIG_GLOBAL_CACHE_DIR }}
          key: zig-global-${{ runner.os }}-${{ env.ZIG_VERSION }}
          restore-keys: |
            zig-global-${{ runner.os }}-

      - name: Install Zig (0.15.2)
        uses: goto-bus-stop/setup-zig@v2
        with:
          zig-version: ${{ env.ZIG_VERSION }}

      - name: Ensure correct Zig on PATH (remove runner zig/master)
        shell: pwsh
        run: |
          # Scrub any zig\master from PATH to avoid header/clang mismatch
          $paths = $env:PATH -split ';' | Where-Object {$_ -notmatch '\\zig\\master\\'}
          $env:PATH = ($paths -join ';')

          Write-Host "zig path: " (Get-Command zig).Source
          $ver = (zig version).Trim()
          if ($ver -ne $env:ZIG_VERSION) {
            Write-Error "Wrong zig version on PATH. Expected $($env:ZIG_VERSION), got $ver"
            exit 1
          }
          zig env

      - name: Build (ReleaseSafe)
        shell: pwsh
        run: zig build -Doptimize=ReleaseSafe

      - name: Run tests
        shell: pwsh
        run: zig build test

      - name: Check formatting
        shell: pwsh
        run: zig fmt --check .

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}
          if-no-files-found: error

      - name: Save Zig global cache
        if: always()
        uses: actions/cache@v4
        with:
          path: ${{ env.ZIG_GLOBAL_CACHE_DIR }}
          key: zig-global-${{ runner.os }}-${{ env.ZIG_VERSION }}

  release:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Get version from config.json
        id: get_version
        shell: bash
        run: |
          VERSION=$(jq -r '.project.version' config.json)
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"

      - name: Download executable artifact
        uses: actions/download-artifact@v4
        with:
          name: zerver-example-windows
          path: ./release_assets

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: |
            Automated release for version ${{ env.VERSION }}.
            See the CHANGELOG for details.
          draft: false
          prerelease: false
          files: ./release_assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
